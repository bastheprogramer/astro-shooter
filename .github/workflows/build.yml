name: Build Astro Shooter

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    strategy:
      matrix:
        os: [ windows-latest, macos-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install PyInstaller
        run: pip install pyinstaller

      - name: Build for Windows
        if: runner.os == 'Windows'
        shell: bash
        run: |
          echo "Building for Windows (targeting Windows 8-11)..."
          pyinstaller --onefile --windowed main.py \
            --add-data "sprites\player.png;sprites" \
            --add-data "sprites\explosion.png;sprites" \
            --add-data "sprites\powerup.png;sprites" \
            --add-data "sprites\astrode.png;sprites" \
            --add-data "sprites\lazer.png;sprites" \
            --add-data "sprites\pointer.png;sprites" \
            --add-data "sounds\explosion.wav;sounds" \
            --add-data "sounds\laserShoot.wav;sounds" \
            --add-data "sounds\powerUp.wav;sounds" \
            --add-data "sounds\background.wav;sounds"

      - name: Build macOS Universal Binary
        if: runner.os == 'macOS'
        shell: bash
        run: |
          echo "Building for macOS universal binary..."

          # Clean previous builds
          rm -rf build dist

          # Build for x86_64 with windowed flag
          echo "Building x86_64 version..."
          arch -x86_64 pyinstaller --onefile --windowed main.py \
            --add-data "sprites/player.png:sprites" \
            --add-data "sprites/explosion.png:sprites" \
            --add-data "sprites/powerup.png:sprites" \
            --add-data "sprites/astrode.png:sprites" \
            --add-data "sprites/lazer.png:sprites" \
            --add-data "sprites/pointer.png:sprites" \
            --add-data "sounds/explosion.wav:sounds" \
            --add-data "sounds/laserShoot.wav:sounds" \
            --add-data "sounds/powerUp.wav:sounds" \
            --add-data "sounds/background.wav:sounds" \
            --name AstroShooter_x86_64
          
          mv dist/AstroShooter_x86_64 dist/AstroShooter_x86_64_binary

          # Clean build directories to avoid conflicts
          rm -rf build
          rm -rf dist

          # Build for arm64 with windowed flag
          echo "Building arm64 version..."
          arch -arm64 pyinstaller --onefile --windowed main.py \
            --add-data "sprites/player.png:sprites" \
            --add-data "sprites/explosion.png:sprites" \
            --add-data "sprites/powerup.png:sprites" \
            --add-data "sprites/astrode.png:sprites" \
            --add-data "sprites/lazer.png:sprites" \
            --add-data "sprites/pointer.png:sprites" \
            --add-data "sounds/explosion.wav:sounds" \
            --add-data "sounds/laserShoot.wav:sounds" \
            --add-data "sounds/powerUp.wav:sounds" \
            --add-data "sounds/background.wav:sounds" \
            --name AstroShooter_arm64

          mv dist/AstroShooter_arm64 dist/AstroShooter_arm64_binary

          # Merge the two binaries into one universal binary
          mkdir -p dist
          lipo -create dist/AstroShooter_x86_64_binary dist/AstroShooter_arm64_binary -output dist/AstroShooter_universal

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: AstroShooter-${{ runner.os }}
          path: dist/
