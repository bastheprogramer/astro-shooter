name: Build Astro Shooter

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller pyglet numba

      - name: Build executable
        shell: bash
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
            echo "Building for Windows"
            pyinstaller --onefile --windowed main.py --add-data "sprites;sprites" --add-data "sounds;sounds"
          elif [ "$RUNNER_OS" == "macOS" ]; then
            echo "Building for macOS"
            pyinstaller --onefile --windowed main.py --add-data "sprites:sprites" --add-data "sounds:sounds"
          else
            echo "Building for other OS"
            pyinstaller --onefile --windowed main.py --add-data "sprites:sprites" --add-data "sounds:sounds"
          fi

      - name: Archive build artifacts
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: Astro-Shooter-${{ matrix.os }}
          path: dist/*
