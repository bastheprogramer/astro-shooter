name: Build Astro Shooter

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  windows:
    name: Build Windows EXE
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyglet numba numpy
          pip install pyinstaller

      - name: Build EXE with PyInstaller
        run: |
          # The --add-data option includes asset directories.
          pyinstaller --onefile --add-data "sound;sound" --add-data "sprites;sprites" main.py

      - name: Upload Windows Artifact
        uses: actions/upload-artifact@v3
        with:
          name: AstroShooter-windows-exe
          path: dist/*.exe

  macos:
    name: Build macOS App
    runs-on: macos-latest
    strategy:
      matrix:
        arch: [ x86_64, arm64, universal ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyglet numba numpy
          pip install py2app

      - name: Build Astro Shooter for ${{ matrix.arch }}
        run: |
          if [ "${{ matrix.arch }}" == "universal" ]; then
              echo "Building universal app..."
              # Build for x86_64
              arch -x86_64 python setup.py py2app
              mv "dist/Astro Shooter.app" "dist/AstroShooter_x86_64.app"
              rm -rf build
              # Build for arm64
              arch -arm64 python setup.py py2app
              mv "dist/Astro Shooter.app" "dist/AstroShooter_arm64.app"
              # Merge the main executables using lipo.
              lipo -create -output "dist/Astro Shooter.app/Contents/MacOS/Astro Shooter" \
                "dist/AstroShooter_x86_64.app/Contents/MacOS/Astro Shooter" \
                "dist/AstroShooter_arm64.app/Contents/MacOS/Astro Shooter"
              echo "Universal app built."
          else
              if [ "${{ matrix.arch }}" == "x86_64" ]; then
                  arch -x86_64 python setup.py py2app
              elif [ "${{ matrix.arch }}" == "arm64" ]; then
                  arch -arm64 python setup.py py2app
              fi
          fi

      - name: Upload macOS Artifact
        uses: actions/upload-artifact@v3
        with:
          name: AstroShooter-macos-${{ matrix.arch }}-app
          path: dist/*.app
